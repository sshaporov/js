// Recursion
// https://learn.javascript.ru/recursion
// https://www.youtube.com/watch?v=Kuq6oIN3PH0

Рекурсия – это функция, которая вызывает сама себя.
В процессе выполнения задачи в теле функции могут быть вызваны другие функции для выполнения подзадач.
Частный случай подвызова – когда функция вызывает сама себя и называется рекурсией.

Task #1:
Написать функцию pow(x, n), которая возводит x в натуральную степень n
pow(2, 2) = 4
pow(2, 3) = 8
pow(2, 4) = 16

Вариант 1:
function pow(x, n) {
  let result = 1
  for (let i = 0; i < n; i++) {
    result *= x
  }
  return result
}
alert( pow(2, 3) )  // 8

Вариант 2:
function pow(x, n) {
  return (n == 1) ? x : (x * pow(x, n - 1))
}

Глубина рекурсии - количество вложенных вызовов.
Максимальная глубина рекурсии ограничена движком JavaScript и равно 10000.

Как работают рекурсивные вызов?
Информация о процессе выполнения запущенной функции хранится в её контексте выполнения
Контекст выполнения – специальная внутренняя структура данных, которая содержит информацию о вызове функции.
Она включает в себя конкретное место в коде, на котором находится интерпретатор, локальные переменные функции,
значение this (мы не используем его в данном примере) и прочую служебную информацию.