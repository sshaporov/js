1. Методы HTTPS-запросов
GET - запрашивает представление ресурса. Запросы с использованием этого метода могут только извлекать данные.
HEAD - запрашивает ресурс так же, как и метод GET, но без тела ответа.
POST - используется для отправки сущностей к определённому ресурсу. Часто вызывает изменение состояния или какие-то побочные эффекты на сервере.
PUT - заменяет все текущие представления ресурса данными запроса.
DELETE - удаляет указанный ресурс.
CONNECT - устанавливает "туннель" к серверу, определённому по ресурсу.
OPTIONS - используется для описания параметров соединения с ресурсом.
TRACE - выполняет вызов возвращаемого тестового сообщения с ресурса.
PATCH - используется для частичного изменения ресурса.

2. Иденпотентный метод
Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд,
имеет один и тот же эффект, не изменяющий состояние сервера. Другими словами,
идемпотентный метод не должен иметь никаких побочных эффектов (side-effects), кроме сбора статистики
или подобных операций. Корректно реализованные методы GET, HEAD, PUT и DELETE идемпотентны, но не метод POST.

3. Коды ответов HTTP
Код состояния HTTP (англ. HTTP status code) — часть первой строки ответа сервера при запросах по протоколу HTTP.
Он представляет собой целое число из трёх десятичных цифр. Первая цифра указывает на класс состояния.
За кодом ответа обычно следует отделённая пробелом поясняющая фраза на английском языке,
которая разъясняет человеку причину именно такого ответа
***************************************************** 1xx: Informational (информационные)
100 Continue («продолжай»)
101 Switching Protocols («переключение протоколов»)
102 Processing («идёт обработка»)
***************************************************** 2xx: Success (успешно)
200 OK («хорошо»)
201 Created («создано»)
202 Accepted («принято»)
204 No Content («нет содержимого»)
***************************************************** 3xx: Redirection (перенаправление):
300 Multiple Choices («множество выборов»)
301 Moved Permanently («перемещено навсегда»)
302 Moved Temporarily («перемещено временно»)
302 Found («найдено»)
***************************************************** 4xx: Client Error (ошибка клиента):
400 Bad Request («неправильный, некорректный запрос»)
401 Unauthorized («не авторизован (не представился)»)
402 Payment Required («необходима оплата»)
403 Forbidden («запрещено (не уполномочен)»)
404 Not Found («не найдено»)
405 Method Not Allowed («метод не поддерживается»)
408 Request Timeout («истекло время ожидания»)
419 Authentication Timeout (not in RFC 2616) («обычно ошибка проверки CSRF»)
***************************************************** 5xx: Server Error (ошибка сервера):
500 Internal Server Error («внутренняя ошибка сервера»)
501 Not Implemented («не реализовано»)[
502 Bad Gateway («плохой, ошибочный шлюз»)
503 Service Unavailable («сервис недоступен»)
504 Gateway Timeout («шлюз не отвечает»)

4. Что такое CORS
CORS — это механизм безопасности, который позволяет веб-странице из одного домена обращаться к ресурсус другим доменом
(кросс-доменным запросом). По умолчанию веб-браузеры не разрешают AJAX-запросы на сайты,
кроме сайта, который вы посещаете. Это называется политикой единого происхождения,и это важная часть модели
веб-безопасности. Совместное использование ресурсов междуразными источниками (cross-origin resource sharing) — это
механизм HTML 5, который дополняетполитику единого происхождения для упрощения совместного использования ресурсов
домена междуразличными веб-приложениями.
Спецификация CORS определяет набор заголовков, которые позволяют серверу и браузеру определять, какие запросы
для междоменных ресурсов (изображения, таблицы стилей, сценарии, данные и т. д.) разрешены, а какие нет.
CORS является техникой для ослабления правила одного источника, позволяя JavaScript на web странице обрабатывать
REST API запросы от другого источника.

5. Что такое cookie
Небольшой фрагмент данных, отправленный веб-сервером и хранимый на компьютере пользователя. Веб-клиент
(обычно веб-браузер) всякий раз при попытке открыть страницу соответствующего сайта пересылает этот фрагмент данных
веб-серверу в составе HTTP-запроса. Применяется для сохранения данных на стороне пользователя, на практике обычно
используется для[1]:
- аутентификации пользователя;
- хранения персональных предпочтений и настроек пользователя;
- отслеживания состояния сеанса доступа пользователя;
- сведения статистики о пользователях.

6. Размер куки
По данным Microsoft, его 4096 байт. Размер файлов cookie обычно ограничен 4096 байтами, и вы не можете хранить
более 20 файлов cookie на сайт.

7. use strict
https://ru.stackoverflow.com/questions/435546/%D0%A7%D1%82%D0%BE-%D0%B7%D0%BD%D0%B0%D1%87%D0%B8%D1%82-use-strict#:~:text=%22use%20strict%22%3B%20(%D0%BF%D0%B5%D1%80%D0%B5%D0%B2%D0%BE%D0%B4,%D0%BA%D0%BE%D0%B4%20%D0%BE%D0%B1%D1%80%D0%B0%D0%B1%D0%B0%D1%82%D1%8B%D0%B2%D0%B0%D0%B5%D1%82%D1%81%D1%8F%20%D0%B2%20%D0%BD%D0%B5%D0%BE%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%87%D0%B5%D0%BD%D0%BD%D0%BE%D0%BC%20%D1%80%D0%B5%D0%B6%D0%B8%D0%BC%D0%B5.

8. Статическая и динамическая типизация
Динами́ческая типиза́ция — приём, при котором переменнаясвязывается с типом в момент присваивания значения, а не в момент
объявления переменной. Таким образом, в различныхучастках программы одна и та же переменная может принимать значения
разных типов. Примеры языков с динамическойтипизацией — Smalltalk, Python, Objective-C, Ruby, PHP, Perl, JavaScript, Лисп.
Стати́ческая типиза́ция — прием? при ктором переменная связывается с типом в момент объявления и тип не может быть изменён
позже (переменная или параметр будут принимать, а функция — возвращать значения только этого типа). Примеры статически
типизированных языков — Ада, С++, C#, D, Java, ML, Паскаль, Solidity, Go, Fortran, Matlab, PHP >= 7.0.

9. Как клиент взаимодействует с сервером?
Клиент-серверное взаимодействие — это обмен данными между клиентом и сервером.
Это взаимодействие двух программных продуктов между собой, один из которых выступает в качестве сервера, а другой
соответственно в качестве клиента. Клиент посылает запрос, а сервер отвечает ему. А что такое клиент и что такое
сервер? Спросите Вы. Клиент это программная оболочка, с которой взаимодействует  пользователь. А сервер это та часть
программного обеспечения, которая выполняет все основные функции (хранит данные, выполняет расчеты).

10. Что такое REST
(Representational state transfer) – это стиль архитектуры программного обеспечения для распределенных систем,
таких как World Wide Web, который, как правило, используется для построения веб-служб. Термин REST был введен
в 2000 году Роем Филдингом, одним из авторов HTTP-протокола. Системы, поддерживающие REST, называются RESTful-системами.
Как происходит управление информацией сервиса – это целиком и полностью основывается на протоколе передачи данных.
Наиболее распространенный протокол конечно же HTTP. Так вот, для HTTP действие над данными задается с помощью методов:
GET (получить), PUT (добавить, заменить), POST (добавить, изменить, удалить), DELETE (удалить). Таким образом,
действия CRUD (Create-Read-Updtae-Delete) могут выполняться как со всеми 4-мя методами, так и только с помощью GET и POST.

11. Объясните понятие мутабельность/иммутабельность? Какие типы относятся к мутабельным и наоборот?
Концепция неизменяемости довольно проста. По сути, неизменное значение — это то, что нельзя изменить. В частности,
когда мы разрабатываем наши приложения, мы можем оказаться в некоторых ситуациях, когда мы захотим создать новый
объект в нашем коде, содержащий новое свойство или значение, при этом сохраняя исходное значение.
Концепция неизменяемости может помочь нам создавать новые объекты, следя за тем, чтобы мы не меняли исходное значение.
В JavaScript у нас есть примитивные типы и ссылочные типы. Примитивные типы включают числа, строки, boolean, null,
undefined. И ссылочные типы включают объекты, массивы и функции.
Разница между этими типами заключается в том, что примитивные типы неизменяемы (immutable), а ссылочные типы изменяемы
(mutable).