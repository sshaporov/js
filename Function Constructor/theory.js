console.log('Functions constructor - теория')

// Функция-конструктор
// Keyword - new. Function-constructor
// https://learn.javascript.ru/constructor-new
// https://metanit.com/web/javascript/4.5.php
// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new

function User(name) {
    this.name = name;
    this.isAdmin = false;
}
let user = new User("Вася");
alert(user.name); // Вася
alert(user.isAdmin); // false
// Функции-конструкторы являются обычными функциями. Но есть два соглашения:
//     Имя функции-конструктора должно начинаться с большой буквы.
//     Функция-конструктор должна вызываться при помощи оператора "new".

// Когда функция вызывается как new User(...), происходит следующее:
//     Создаётся новый пустой объект, и он присваивается this.
//     Выполняется код функции. Обычно он модифицирует this, добавляет туда новые свойства.
//     Возвращается значение this.
// Используя специальное свойство new.target внутри функции, мы можем проверить, вызвана ли функция при помощи оператора new или без него.
// В случае, если функция вызвана при помощи new, то в new.target будет сама функция, в противном случае undefined.
// Обычно конструкторы ничего не возвращают явно. Их задача – записать все необходимое в this, который в итоге станет результатом.
// так как каждый новый объект, созданный из конструктора, будет иметь копии определений методов.
// Более эффективно определить методы в прототипе конструктора, который существует именно для этого.