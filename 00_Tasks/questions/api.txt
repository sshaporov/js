1. CORS
CORS — механизм, использующий дополнительные HTTP-заголовки, чтобы дать возможность агенту пользователя 
получать разрешения на доступ к выбранным ресурсам с сервера на источнике (домене), отличном от того, 
что сайт использует в данный момент. Говорят, что агент пользователя делает запрос с другого источника 
(cross-origin HTTP request), если источник текущего документа отличается от запрашиваемого ресурса 
доменом, протоколом или портом.
Заголовок Access-Control-Allow-Origin - можно указать ресурс или * 

-  Простые запросы не заставляют использовать CORS preflight.
   Условия простого запроса:
   а) методы GET, HEAD, POST
   б) заголовки которые можно исправлять вручную: 
      - Accept
      - Accept-Language
      - Content-Language
      - Content-Type 
   в) Допустимыми значениями заголовка Content-Type:
      - application/x-www-form-urlencoded
      - multipart/form-data
      - text/plain
   г) Не должны быть зарегистрированы обработчики событий на любой объект XMLHttpRequestUpload 
      используемый в запросе; это достигается использованием свойства XMLHttpRequest.upload.
   д) В запросе не должен использоваться объект типа ReadableStream (en-US).

- Предварительные запросы
  В отличии от “простых запросов” (обсуждено выше), "предварительные" запросы сначала отправляют 
  HTTP-запрос методом OPTIONS к ресурсу на другом домене, чтобы определить, является ли фактический 
  запрос безопасным для отправки.
  Условия предварительных запроса:
  а) методы PUT, DELETE, CONNECT, OPTIONS, TRACE, PATCH
  б) если в запросе есть заголовки:
     - Accept
     - Accept-Language
     - Content-Language
     - Content-Type (но учтите дополнительные требования ниже)
     - Last-Event-ID
     - DPR
     - Save-Data
     - Viewport-Width
     - Width
  в) Или если заголовок Content-Type содержит значение, отличное от следующих:
     - application/x-www-form-urlencoded
     - multipart/form-data
     - text/plain
  г) Или если один или больше обработчиков событий зарегистрированы на объекте XMLHttpRequestUpload, 
     который используется в запросе. 
  д) Объект ReadableStream (en-US) используется в запросе.

2. запрос OPTIONS
   - Определение разрешённых сервером методов запроса
     Для того, чтобы узнать какие методы запросов поддерживаются сервером, можно воспользоваться curl направить OPTIONS запрос:
     curl -X OPTIONS http://example.org -i  // ответ заголовок - Allow: OPTIONS, GET, HEAD, POST
   - Предзапросы по технологии CORS
     Ответ сервера содержит параметр Access-Control-Allow-Methods и сообщает, что  POST, GET, и 
     OPTIONS методы являются приемлемыми для данного ресурса. Этот заголовок похож на заголовок 
     Allow (en-US) , но используется строго в контексте CORS.